stages:
  - build
  - deploy

# build:
#   only:
#     - master
#   stage: build
#   image: docker:latest
#   services:
#     - docker:dind
#   script:
#     - ls public/assets public/packs || true # for debugging


# deploy:
#   only:
#     - master
#   stage: deploy
#   cache: {}
#   image: atherenergy/awsebcli
#   script:
#     - mkdir -p removable

build-develop:
  only:
    - tags
    - develop
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build . -t $CI_REGISTRY/learner.in/neetprepadmin:$CI_COMMIT_TAG --build-arg SECRET_KEY_BASE=$SECRET_KEY_BASE
    # - docker build -t $CI_REGISTRY/learner.in/neetprepadmin:$CI_COMMIT_TAG .
    - docker push $CI_REGISTRY/learner.in/neetprepadmin

# deploy-develop:
#   only:
#     - tags
#     - develop
#   stage: deploy
#   cache: {}
#   image: ubuntu:20.04
#   script:
#     - apt update -y
#     # - snap install doctl
#     # - mkdir ~/.config
#     - mkdir ~/.kube
#     # - export DIGITALOCEAN_ACCESS_TOKEN=$DO_ACCESS
#     # - doctl kubernetes cluster kubeconfig save np-proxy-cluster
#     - apt install -y apt-transport-https gnupg2 curl
#     - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
#     - echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee -a /etc/apt/sources.list.d/kubernetes.list
#     - apt update -y
#     - apt install -y kubectl
#     - echo $KUBECONFIG | base64 --decode > ~/.kube/config.yaml
#     - cat ~/.kube/config.yaml
#     - kubectl --kubeconfig="~/.kube/config.yaml" get pods

deploy-develop:
  only:
    - tags
    - develop
  stage: deploy
  cache: {}
  image: aliartiza75/kubectl
  before_script:
    - mkdir ~/.kube/
    - echo $KUBECONFIG | base64 --decode > ~/.kube/config.yaml
  script:
    - kubectl get pods