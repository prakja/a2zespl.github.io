<script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML'></script>
<script>
  window.onload = function() {
    MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
    if ("<%= @doubt_tag %>" == "video" && "<%= @ism3u8 %>" == "yes") {
      console.log("Has video");
      var player = videojs('my_video_1');
      player.src({
        withCredentials: true
      });
    }
    document.getElementById("good_doubt").checked = "<%= @doubt.goodFlag %>" == "false" ? false : true;
    reset();
  };
</script>
<div style="padding: 8px">
  <div style="margin: 16px; padding: 8px; border: 1px solid #828282">
    <h4 style="margin-top: -4px">Doubt by <%= link_to @doubt_user.name, admin_user_path(@doubt_user), target: :_blank %>, <%= link_to "Past Doubts", "/admin/doubts?q[userId_eq]=" + @doubt_user.id.to_s, target: :_blank %> </h4>
    <label><input type="checkbox" id="good_doubt" onchange="onDoubtFlagChange()"> This is a good doubt</label>
    <% if(@doubt.admin_user != nil) %>
    <% name = @doubt.admin_user.name || @doubt.admin_user.email %>
    <h4>This doubt is assigned to: <%= name %></h4>
    <% end %>
    <div style="margin-left: 20px; margin-top: -10px">
      <h2><%= raw(@doubt.content) %></h2>
      <% if not @doubt.audioLink.nil? %>
        <%= raw('<audio controls style="margin-top: -10px"><source src="' + @doubt.audioLink + '" type="audio/ogg">Your browser does not support the audio tag.</audio>') %>
      <% end %>
      <h5 style="margin-top: -5px"><%= Time.parse(@doubt.createdAt.to_s).to_date.to_formatted_s(:long) %></h5>
      <h5 style="margin-top: -10px"><%= @doubt.topic.name + ' / ' + @doubt.topic.subject.name %></h5>
      <div style="margin-top: -10px"><%= raw(@doubt_data) %></div>
    </div>
  </div>

  <div style="margin: 32px">
    <h4>Doubt Answers:</h4>
    <% @doubt_answers_data.each do |key, value| %>
      <div style="margin-top: 4px; margin-left: 36px; padding: 8px; border: 1px solid #828282">
        <h3 style="margin-top: -2px"><b><%= value[0] %></b></h3>
        <h5 style="margin-top: -10px"><%= value[2].to_date.to_formatted_s(:long) %></h5>
        <h4 style="margin-top: -10px"><%= raw(value[1]) %></h4>
        <div style="margin-top: -10px"><%= image_tag(value[3], size: "640x360") if not value[3].blank? %></div>
      </div>
    <% end %>
  </div>
  <div style="margin: 32px; margin-top: 4px;">
    <h4>Add your Answer:</h4>

    <div style="margin: 8px">
      <p>Add video to answer</p>
      <input id="select_video" list="videos">
      <datalist id="videos">
        <%= Video.neetprep_course.pluck("id", "name").each do |video| %>
          <option value="<%= video %>">
        <% end %>
      </datalist>
      <button onclick="addVideo()">Add selected video</button>
    </div>

    <style>
      .loader {
        border: 8px solid #f3f3f3;
        border-radius: 50%;
        border-top: 9px solid #3498db;
        width: 20px;
        height: 20px;
        -webkit-animation: spin 2s linear infinite; /* Safari */
        animation: spin 2s linear infinite;
      }

      /* Safari */
      @-webkit-keyframes spin {
        0% { -webkit-transform: rotate(0deg); }
        100% { -webkit-transform: rotate(360deg); }
      }

      @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }
    </style>
    <script src="https://sdk.amazonaws.com/js/aws-sdk-2.533.0.min.js"></script>
    <div style="margin: 8px">
      <p>Record audio explanation</p>
      <div style="display: none" class="loader" id="loader"></div>
      <div id="input_div" style="display: none">
        <button style="margin-top: 8px" onclick="startRecording()" id="audio_button">Start Recording</button>
        -- or --
        <input id="audioFile" type="file" name="myFile" onchange="fileSelected()">
      </div>
      <div id="preview_div" style="display: none">
        <audio controls id="audio_player_preview"></audio>
      </div>
      <div id="input_stop_div" style="display: none">
          <button style="margin-top: 8px" onclick="stopRecording()" id="rec_stop_button">Stop Recording</button>
      </div>
      <div id="upload_div" style="display: none">
        <button style="margin-top: 8px" onclick="uploadAndAttachRecording()" id="upload_attach_button">Upload and Attach</button>
      </div>
    </div>

    <%= text_area(:doubtAnswer, :content, cols: 20, rows: 10) %>
  </div>
</div>

<script src='https://cdnjs.cloudflare.com/ajax/libs/tinymce/4.8.2/tinymce.min.js'></script>
<script src='https://cdnjs.cloudflare.com/ajax/libs/tinymce/4.8.2/plugins/code/plugin.min.js'></script>
<script>
tinymce.init({
  selector: '#doubtAnswer_content',
  plugins: "link image code paste media",
  // TODO: to be added only if secure loading of plugin.js below is not working
  // content_security_policy: "default-src 'self' *.wiris.net *.amazonaws.com *.cloudflare.com; style-src 'self' 'unsafe-inline' *.cloudflare.com; img-src * data:;",
  external_plugins: { tiny_mce_wiris: 'https://www.neetprep.com/@wiris/mathtype-tinymce4/plugin.min.js' },
  // TODO: not sure why was this required but language going undefined in wiris editor somehow and gets fixed now
  language: 'en',
  toolbar: 'code,|,bold,italic,underline,|,cut,copy,paste,|,search,|,undo,redo,|,forecolor,backcolor,|,justifyleft,justifycenter,justifyright,fontselect,fontsizeselect,|,tiny_mce_wiris_formulaEditor,tiny_mce_wiris_formulaEditorChemistry,|,fullscreen,media',
  paste_data_images: true,
  images_upload_url: 'https://www.neetprep.com/api/v1/fileUpload/fileUpload',
  // TODO: seems wiris plugin is changing this to not have its images affected but ends up causing issue to our image upload..so adding this..anything better? this is especially added for data image which exist and images_dataimg_filter was anyway getting called for that
  editorObject: {'id': 'doubtAnswer_content'},
  setup: function (editor) {
    editor.on('blur', function (e) {
      document.getElementById('doubtAnswer_content').value = editor.getContent();
    });
    // TODO: seems wiris plugin is changing this to not have its images affected but ends up causing issue to our image upload..so adding this..anything better?
    editor.settings.images_dataimg_filter = function () {return undefined;};
  }
});
</script>

<div style="text-align: center">
  <button name="post_button" id="post_button" type="button" onclick="putAnswer()">Post Answer</button>
</div>

<script>

var loader = document.getElementById("loader");
var audioButton = document.getElementById("audio_button");
var audio = document.getElementById("audio_player_preview");
var uploadAudioButton = document.getElementById("upload_attach_button");
var fileInput = document.getElementById('audioFile');
var cancleButton = document.getElementById('cancleButton');
var stopRecordingButton = document.getElementById('rec_stop_button');

var inputDiv = document.getElementById("input_div");
var inputStopDiv = document.getElementById("input_stop_div");
var previewDiv = document.getElementById("preview_div");
var uploadDiv = document.getElementById("upload_div");

var goodFlagCheckbox = document.getElementById("good_doubt");

var uploadFromFile = false;
var audioChunks = [];
var audioUrl = null;
var audioBlob = null;
var mediaRecorder = null;

function putAnswer() {
  var content = document.getElementById("doubtAnswer_content").value
  if (!content)
    return;

  var doubtId = "<%= @doubt_id %>";
  var data = new FormData();
  var http = new XMLHttpRequest();
  data.append("doubtId", doubtId);
  data.append("content", content);
  data.append("userId", "<%= @userId %>");
  var url = '/doubt_answers/post_answer';
  document.getElementById("post_button").innerHTML = "Posting";
  document.getElementById("post_button").disabled = true;

  http.onreadystatechange = function() {
    if (http.readyState == XMLHttpRequest.DONE) {
      document.getElementById("post_button").innerHTML = "Done Redirecting";
      window.location.href = "/doubt_answers/answer?doubt_id=" + doubtId
    }
  }
  http.open("POST", url);
  http.send(data);
}

function onDoubtFlagChange() {
  //const Http = new XMLHttpRequest();
  const url = window.location.origin + "/doubt_answers/toggle_good_flag/";
  $.ajax({
    type: "POST",
    url: url,
    data: {
      "doubtId": "<%= @doubt_id %>",
      "value": goodFlagCheckbox.checked
    }
  }).done (function (data) {
    data = null;
  });
}

function fileSelected(e) {
  uploadFromFile = true;
  inputDiv.style.display = 'none';
  stopRecordingButton.innerHTML = "Cancel";
  stopRecordingButton.onclick = reset;
  inputStopDiv.style.display = 'block';
  uploadDiv.style.display = 'block';
  previewDiv.style.display = 'block';

  var file = fileInput.files[0];
  if (file) {
    var reader = new FileReader();
    reader.onload = function (e) {
      audio.src = e.target.result;
    }
    reader.readAsDataURL(file);
  }
}

function startRecording () {
  loader.style.display = 'block';
  inputDiv.style.display = 'none';
  inputStopDiv.style.display = 'block';
  navigator.mediaDevices.getUserMedia({ audio: true })
  .then(stream => {
    mediaRecorder = new MediaRecorder(stream);
    mediaRecorder.start();

    mediaRecorder.addEventListener("dataavailable", event => {
      audioChunks.push(event.data);
    });
  });
}

function stopRecording () {
  loader.style.display = 'none';
  stopRecordingButton.innerHTML = "Cancel";
  stopRecordingButton.onclick = reset;

  mediaRecorder.addEventListener("stop", () => {
    console.log ("Preparing audio");
    audioBlob = new Blob(audioChunks);
    audioUrl = URL.createObjectURL(audioBlob);
    audio.src = audioUrl;
    console.log (audioUrl);

    previewDiv.style.display = 'block';
    uploadDiv.style.display = 'block';
  });
  console.log ("Stopping recording");
  mediaRecorder.stop();
}

function uploadAndAttachRecording () {
  loader.style.display = 'block'
  var bucketName = 'doubtexplanations';
  var bucketRegion = 'us-west-2';

  var config = new AWS.Config({
    accessKeyId: 'AKIAYEPQTPG6K7CEFU6D', secretAccessKey: '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', region: 'us-west-2'
  });

  var credentials = new AWS.Credentials('AKIAYEPQTPG6K7CEFU6D', 'XtUqnXWkwvPvlK+t8gwuShuESJA1fjnBV1q6AwTX');
  AWS.config.region = bucketRegion;
  AWS.config.credentials = credentials;
  console.log(AWS.config.credentials);

  var bucket = new AWS.S3({
    params: {
        Bucket: bucketName
    }
  });
  if (!uploadFromFile)
    var file = new File([audioBlob], "doubt_explanations_" + "<%= @doubt_id %>" + "_" + Date.now() + ".ogg");
  else
    var file = fileInput.files[0];

  if (!file) {
    alert ("File error");
    loader.style.display = 'none';
    return;
  } else {
    var params = {
      Key: file.name,
      ContentType: file.type,
      Body: file,
      ACL: 'public-read'
    };
    bucket.putObject(params, function(err, data) {
      if (err) {
        console.log(" Error while  UPLOADING Audio :" + err);
        alert ('Error uploading audio');

        loader.style.display = 'none';
      } else {
        var fileUrl = 'https://doubtexplanations.s3-us-west-2.amazonaws.com/' + file.name;
        insertIntoTiny(fileUrl);
        reset ();
      }
    });
  }
}

function reset() {
  audioChunks = [];
  stopRecordingButton.innerHTML = "Stop Recording";
  stopRecordingButton.onclick = stopRecording;
  loader.style.display = 'none';
  inputDiv.style.display = 'block';
  inputStopDiv.style.display = 'none';
  previewDiv.style.display = 'none';
  uploadDiv.style.display = 'none';
}

function insertIntoTiny(url) {
  this.tinyMCE.editors[0].execCommand('mceInsertContent', false, '<audio controls style="display: block" id="audio_player"><source src="' + url +'" type="audio/ogg">Your browser does not support the audio element.</audio>');
}

function addVideo() {
  var video_id = window.document.getElementById('select_video').value.split(',')[0].replace('[','');
  var video_name = document.getElementById('select_video').value.split(',')[1].replace(']','').trim();
  this.tinyMCE.editors[0].execCommand('mceInsertContent', false, '<a href="https://www.neetprep.com/video-class/' + video_id + '">' + video_name + '</a>');
}
</script>
